"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./lib/eip712.ts":
/*!***********************!*\
  !*** ./lib/eip712.ts ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   domain: () => (/* binding */ domain),\n/* harmony export */   types: () => (/* binding */ types)\n/* harmony export */ });\nconst domain = {\n    name: \"MetaAggregator\",\n    version: \"1\",\n    chainId: 31,\n    verifyingContract: \"0x0000000000000000000000000000000000000000\"\n};\nconst types = {\n    Order: [\n        {\n            name: \"sellToken\",\n            type: \"address\"\n        },\n        {\n            name: \"buyToken\",\n            type: \"address\"\n        },\n        {\n            name: \"sellAmount\",\n            type: \"uint256\"\n        },\n        {\n            name: \"buyAmount\",\n            type: \"uint256\"\n        },\n        {\n            name: \"validTo\",\n            type: \"uint256\"\n        },\n        {\n            name: \"user\",\n            type: \"address\"\n        },\n        {\n            name: \"receiver\",\n            type: \"address\"\n        },\n        {\n            name: \"appData\",\n            type: \"bytes\"\n        },\n        {\n            name: \"feeAmount\",\n            type: \"uint256\"\n        },\n        {\n            name: \"partiallyFillable\",\n            type: \"bool\"\n        },\n        {\n            name: \"kind\",\n            type: \"string\"\n        },\n        {\n            name: \"signingScheme\",\n            type: \"string\"\n        }\n    ]\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL2xpYi9laXA3MTIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxNQUFNQSxTQUFTO0lBQ3BCQyxNQUFNO0lBQ05DLFNBQVM7SUFDVEMsU0FBUztJQUNUQyxtQkFBbUI7QUFDckIsRUFBRTtBQUVLLE1BQU1DLFFBQVE7SUFDbkJDLE9BQU87UUFDTDtZQUFFTCxNQUFNO1lBQWFNLE1BQU07UUFBVTtRQUNyQztZQUFFTixNQUFNO1lBQVlNLE1BQU07UUFBVTtRQUNwQztZQUFFTixNQUFNO1lBQWNNLE1BQU07UUFBVTtRQUN0QztZQUFFTixNQUFNO1lBQWFNLE1BQU07UUFBVTtRQUNyQztZQUFFTixNQUFNO1lBQVdNLE1BQU07UUFBVTtRQUNuQztZQUFFTixNQUFNO1lBQVFNLE1BQU07UUFBVTtRQUNoQztZQUFFTixNQUFNO1lBQVlNLE1BQU07UUFBVTtRQUNwQztZQUFFTixNQUFNO1lBQVdNLE1BQU07UUFBUTtRQUNqQztZQUFFTixNQUFNO1lBQWFNLE1BQU07UUFBVTtRQUNyQztZQUFFTixNQUFNO1lBQXFCTSxNQUFNO1FBQU87UUFDMUM7WUFBRU4sTUFBTTtZQUFRTSxNQUFNO1FBQVM7UUFDL0I7WUFBRU4sTUFBTTtZQUFpQk0sTUFBTTtRQUFTO0tBQ3pDO0FBQ0gsRUFBRSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxqb2VyaVxcT25lRHJpdmVcXERlc2t0b3BcXE1ldGEgQWdncmVnYXRvciAyLjBcXGxpYlxcZWlwNzEyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBkb21haW4gPSB7XHJcbiAgbmFtZTogXCJNZXRhQWdncmVnYXRvclwiLFxyXG4gIHZlcnNpb246IFwiMVwiLFxyXG4gIGNoYWluSWQ6IDMxLCAvLyA8LS0gU2Vwb2xpYSB0ZXN0bmV0XHJcbiAgdmVyaWZ5aW5nQ29udHJhY3Q6IFwiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCIsXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgdHlwZXMgPSB7XHJcbiAgT3JkZXI6IFtcclxuICAgIHsgbmFtZTogXCJzZWxsVG9rZW5cIiwgdHlwZTogXCJhZGRyZXNzXCIgfSxcclxuICAgIHsgbmFtZTogXCJidXlUb2tlblwiLCB0eXBlOiBcImFkZHJlc3NcIiB9LFxyXG4gICAgeyBuYW1lOiBcInNlbGxBbW91bnRcIiwgdHlwZTogXCJ1aW50MjU2XCIgfSxcclxuICAgIHsgbmFtZTogXCJidXlBbW91bnRcIiwgdHlwZTogXCJ1aW50MjU2XCIgfSxcclxuICAgIHsgbmFtZTogXCJ2YWxpZFRvXCIsIHR5cGU6IFwidWludDI1NlwiIH0sXHJcbiAgICB7IG5hbWU6IFwidXNlclwiLCB0eXBlOiBcImFkZHJlc3NcIiB9LFxyXG4gICAgeyBuYW1lOiBcInJlY2VpdmVyXCIsIHR5cGU6IFwiYWRkcmVzc1wiIH0sXHJcbiAgICB7IG5hbWU6IFwiYXBwRGF0YVwiLCB0eXBlOiBcImJ5dGVzXCIgfSxcclxuICAgIHsgbmFtZTogXCJmZWVBbW91bnRcIiwgdHlwZTogXCJ1aW50MjU2XCIgfSxcclxuICAgIHsgbmFtZTogXCJwYXJ0aWFsbHlGaWxsYWJsZVwiLCB0eXBlOiBcImJvb2xcIiB9LFxyXG4gICAgeyBuYW1lOiBcImtpbmRcIiwgdHlwZTogXCJzdHJpbmdcIiB9LFxyXG4gICAgeyBuYW1lOiBcInNpZ25pbmdTY2hlbWVcIiwgdHlwZTogXCJzdHJpbmdcIiB9LFxyXG4gIF0sXHJcbn07Il0sIm5hbWVzIjpbImRvbWFpbiIsIm5hbWUiLCJ2ZXJzaW9uIiwiY2hhaW5JZCIsInZlcmlmeWluZ0NvbnRyYWN0IiwidHlwZXMiLCJPcmRlciIsInR5cGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./lib/eip712.ts\n"));

/***/ })

});